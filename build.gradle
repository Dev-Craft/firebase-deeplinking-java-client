plugins {
    id "java"
    id "signing"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

group = "io.github.dev_craft"
archivesBaseName = "firebase.deeplinking.client"
version = "1.0"

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

def hasSigningKey = project.hasProperty("signingKeyId") || project.hasProperty("signingKey")
if(hasSigningKey) {
    sign(project)
}
void sign(Project project) {
    project.signing {
        required { project.gradle.taskGraph.hasTask("required") }
        def signingKeyId = project.findProperty("signingKeyId")
        def signingKey = project.findProperty("signingKey")
        def signingPassword = project.findProperty("signingPassword")
        if (signingKeyId) {
            useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        } else if (signingKey) {
            useInMemoryPgpKeys(signingKey, signingPassword)
        }
        sign publishing.publications.maven
    }
}

project.plugins.withType(MavenPublishPlugin).all {
    PublishingExtension publishing = project.extensions.getByType(PublishingExtension)
    publishing.publications.withType(MavenPublication).all { mavenPublication ->
        mavenPublication.pom {
            description = "Firebase Deep Linking Java Client"
            url = "https://github.com/Dev-Craft/firebase-deeplinking-java-client"
            licenses {
                license {
                    name = "The Apache License, Version 2.0"
                    url = "https://www.apache.org/licenses/LICENSE-2.0"
                }
            }

            developers {
                developer {
                    id = "Tsvetelinna"
                    name = "Tsvetelina Stoilova"
                    email = "Tsvetelinna@noreply.github.com"
                }
            }

            scm {
                connection 'scm:svn:https://github.com/Dev-Craft/firebase-deeplinking-java-client/'
                developerConnection 'scm:svn:https://github.com/Dev-Craft/firebase-deeplinking-java-client/'
                url 'https://github.com/Dev-Craft/firebase-deeplinking-java-client/'
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()    //sonatypeUsername and sonatypePassword properties are used automatically

    }
    connectTimeout = Duration.ofMinutes(3)
    clientTimeout = Duration.ofMinutes(3)
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework:spring-core:5.1.9.RELEASE'
    implementation 'org.springframework:spring-web:5.1.9.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

